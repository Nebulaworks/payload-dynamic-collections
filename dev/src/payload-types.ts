/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export type CollectionFieldEntries = {
  def:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  hooks?: CollectionCollectionFieldHooks;
  access?: CollectionFieldAccess;
  id?: string | null;
}[];
export type AddFieldsProps =
  | {
      fieldName: string;
      fieldValue: string;
      id?: string | null;
    }[]
  | null;

export interface Config {
  collections: {
    users: User;
    dynamicCollection: DynamicCollection;
    versions: Version;
    survival: Survival;
    test: Test;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    currentVersion: CurrentVersion;
  };
}
export interface User {
  id: string;
  role: 'admin' | 'user' | 'container';
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface DynamicCollection {
  id: string;
  slug: string;
  defaultSort?: string | null;
  labels?: CollectionLabels;
  graphQL?: CollectionGraphQLConfig;
  fields: CollectionFieldEntries;
  group?: string | null;
  useAsTitle?: string | null;
  hidden?: ('always' | 'never' | 'isAdmin') | null;
  access?: CollectionAccess;
  hooks?: CollectionHooks;
  updatedAt: string;
  createdAt: string;
}
export interface CollectionLabels {
  singular?: string | null;
  plural?: string | null;
}
export interface CollectionGraphQLConfig {
  singularName?: string | null;
  pluralName?: string | null;
  allow?: boolean | null;
}
export interface CollectionCollectionFieldHooks {
  afterRead?: 'logFieldAfterRead'[] | null;
}
export interface CollectionFieldAccess {
  create?: ('open' | 'allUsers' | 'isAdmin') | null;
  read?: ('open' | 'allUsers' | 'isAdmin') | null;
  update?: ('open' | 'allUsers' | 'isAdmin') | null;
}
export interface CollectionAccess {
  create?: ('open' | 'allUsers' | 'isAdmin' | 'isAdminOrSelf') | null;
  read?: ('open' | 'allUsers' | 'isAdmin' | 'isAdminOrSelf') | null;
  update?: ('open' | 'allUsers' | 'isAdmin' | 'isAdminOrSelf') | null;
  delete?: ('open' | 'allUsers' | 'isAdmin' | 'isAdminOrSelf') | null;
}
export interface CollectionHooks {
  afterRead?: ('basicHook' | 'addFields' | 'addSingleField')[] | null;
  hookProps?: {
    afterRead?: {
      addFields?: AddFieldsProps;
      addSingleField: AddSingleFieldProps;
    };
  };
}
export interface AddSingleFieldProps {
  fieldName: string;
  fieldValue: string;
}
export interface Version {
  id: string;
  version: string;
  collectionDefinitions?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Survival {
  id: string;
  gene_e?: string | null;
  gene_m?: string | null;
  indication?: string | null;
  type?: string | null;
  model?: string | null;
  p?: number | null;
  stat?: number | null;
  data?: string | null;
  n?: number | null;
  n_mut?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Test {
  id: string;
  abc?: string | null;
  b?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface CurrentVersion {
  id: string;
  currentVersion?: (string | null) | Version;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}